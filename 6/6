トレース:(trace 関数名）　関数内で何をやっているのか表示する
トレースをやめるとき:1(untrace 関数名)関数名のトレースをやめる, 2(untrace)　すべてのトレースをやめる

これから
リストを渡して再帰をしていきたい

アトム：すべての要素がリストではないやつ

渡したいデータ
・(a b (c d) e)
やりたいこと：リストの中身がすべてアトムかどうか調べる
手順：一個取り出して比較、アトムだったら次へ、じゃなかたら終了、最後まで行ったら終了

car           cdr
・a         (b (c d) e)
・b         ((c d) e)
・(c d)     (e)
・carがリストなのでアトムじゃない、終了


・(a b e)
car            cdr 
・a            (b e)
・b            (e)
・e            ()
・空　すべて取り出せたのでアトム、終了

ex:lap.lsp

1.nullの掟
 ・対象が空だったらこれ以上はやる必要がないので最初に判定しなくてはならない
		
2.carの掟
・

3.cdrの掟


・lnp関数を作る
渡されたリストの中身がすべて数字であるか調べる

・menberp関数作り
渡されたリストの中に指定したものがあるか調べる
引数はx y xのリストにyがあるか調べる


・課題
渡されたリストの中に指定した文字がいくつ入っているのかの数を表示

空リストの中に指定したものは０
carに指定した文字があれば、cdrに１を足す
文字でなければcdrにそのまま




縦型探索のプログラム
・(print open)：openを表示サせるためのもの、本質的には不要
・(progn)：print openより後ろが本命のプログラムだとめいきするためのもの

・eq はequalと同義



縦型探索とヨコ型探索
ノード間の距離が合計が最小になるものを選ぶように次回の講義では進めていく



課題解決記
・渡されたリストに指定した要素がいくつ入っているのか数える関数を作る
memberpにカウント機能を載せたものなので大枠はmemberpでいいだろう

null：渡したリストが空だったら終了
car：先頭の要素が指定したものと同じ時１を足す、どこに？
cdr:その他の場合、再帰をする
































