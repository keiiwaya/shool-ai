コンスペア・・・２つのアドレスを格納する
例：(a b c)

・carはコンスペアの左のアドレスが指しているところを参照
・cdrはコンスペアの右のアドレスを指しているところを参照

・コンスペアの左には要素の先頭の（例ではaが入る）アドレスを入れ、右には要素の先頭以外のアドレスを入れる、また、右のアドレス先でも同様に繰り返し終着点の右のアドレスにはnullを入れる。


演習
1.(a(b(c d)e)f)
2.((((a b)c)d)e f)

コンスペアを書くときには、（）で囲われているところは一文字とみなして、演習１ならば、最初は３つの要素だとみなすとコンスペアの左にはaのアドレス、右にはそれ以外のアドレスが入り、二段目のコンスペアでは左に（）のアドレスが入り、右にはfのアドレスが入る。（）内のコンスペアでは（）の中の要素を見る。すると先頭はbなのでコンスペアの左にはbのアドレス右にはそれ以外のアドレスが入る。bの右下のコンスペアでは左に（c d)が右にはeのアドレスが入る。同様に繰り返す。



・(setq x '(a b c))・・・xに(a b c)というリストをバインド(代入）している


・(setq z (cdr (cdr x)))・・・ｚに(cdr (cdr x))の結果をバインド、ポインタを入れている

・作用・・・処理をして出てきた答え
・副作用・・・作用したときに影響を与えること

・(setq y '())・・・ｙにnullリストのポインタをバインドしている

・再帰をしていく時にcarをしてcdrをしていく。最後まで行った時に処理をやめるためにnullが必要になってくる

・atom・・・atomかどうかしらべる
・listp・・・listかどうか調べる
listpのｐはpredicate（述語）の意味

・consp・・・consかどうか調べる
consはコンスペアのこと

・変数に数値を使ってはいけない、なぜなら数値は'をつけなくても作れる

・(or )・・・解はnilとなるのはなぜか？ orはtが来たら終了できる、つまり初期値はnilとしないとダメ。

・(and )・・・tとなるのは全要素がtのとき、nilとなるのは一つでもnilがあるとき。


課題
・リストのデータ構造を記述
1.((a b (c (d) e)(f g) h))
2.((a)(b)(c)(d(e(f))) g)

